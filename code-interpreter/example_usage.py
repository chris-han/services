#!/usr/bin/env python3

import requests
import json

def execute_code_sample():
    """
    Sample code to demonstrate how to use the Code Interpreter API
    """
    
    # API configuration
    API_BASE_URL = "http://localhost:8700"
    API_KEY = "your-code-api-key-here"
    
    # Headers for all requests
    headers = {
        "Content-Type": "application/json",
        "x-api-key": API_KEY
    }
    
    print("üß™ Code Interpreter API Sample Usage")
    print("=" * 40)
    
    # 1. Execute simple Python code
    print("\n1. Executing simple Python code:")
    exec_data = {
        "code": """
print("Hello from the Code Interpreter!")
print(f"Current working directory: {__import__('os').getcwd()}")
print("Available modules:", list(__import__('sys').modules.keys())[:10])
""",
        "lang": "py"
    }
    
    response = requests.post(
        f"{API_BASE_URL}/exec",
        headers=headers,
        json=exec_data
    )
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ Success!")
        print(f"STDOUT:\n{result['run']['stdout']}")
        if result['run']['stderr']:
            print(f"STDERR:\n{result['run']['stderr']}")
    else:
        print(f"‚ùå Failed with status {response.status_code}")
        print(response.text)
    
    # 2. Execute code that generates a file
    print("\n2. Executing code that generates a file:")
    exec_data = {
        "code": """
# Create a sample text file
with open("sample_output.txt", "w") as f:
    f.write("This is a sample file generated by the code interpreter.\n")
    f.write("It demonstrates file creation capabilities.\n")
    f.write("The file is automatically delivered to the user.\n")

print("Created sample_output.txt")
print("File contents:")
with open("sample_output.txt", "r") as f:
    print(f.read())
""",
        "lang": "py"
    }
    
    response = requests.post(
        f"{API_BASE_URL}/exec",
        headers=headers,
        json=exec_data
    )
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ Success!")
        print(f"STDOUT:\n{result['run']['stdout']}")
        if result['files']:
            print(f"Generated files:")
            for file in result['files']:
                print(f"  - {file['name']}")
            print(f"Session ID: {result['session_id']}")
    else:
        print(f"‚ùå Failed with status {response.status_code}")
        print(response.text)
    
    # 3. Health check
    print("\n3. Checking service health:")
    response = requests.get(f"{API_BASE_URL}/health")
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ Service is healthy!")
        print(f"Timestamp: {result['timestamp']}")
    else:
        print(f"‚ùå Health check failed with status {response.status_code}")

if __name__ == "__main__":
    execute_code_sample()